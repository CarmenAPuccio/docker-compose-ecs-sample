version: 0.2
# env:
#   #variables:
#   secrets-manager:
#     DOCKERHUB_USERNAME: '$DOCKER_PULL_SECRETS_MANAGER'
#     DOCKERHUB_PASSWORD: '$DOCKER_PULL_SECRETS_MANAGER' 

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - printenv
      - echo "Performing manual install of compose cli"
      - curl -L -o docker-linux-amd64.tar.gz https://github.com/docker/compose-cli/releases/download/v1.0.10/docker-linux-amd64.tar.gz
      - tar xzf docker-linux-amd64.tar.gz
      - chmod +x docker/docker
      - ls -ltr
      - docker/docker compose --help
      - which docker
      - ln -s $(which docker) /usr/local/bin/com.docker.cli
      - mv docker/docker $(which docker)
      - docker --context default ps
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASSWORD
      # - echo "Create Docker ECS context"
      # - docker context create ecs ecs-workshop 
      # - echo "Change context to use ECS context"
      # - docker context use ecs-workshop

  build:
    commands:
      - echo Build started on `date`
      - docker compose build
      - echo "Tagging Docker image for Docker Hub"
      - docker tag docker-compose-ecs-sample_backend:latest ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_backend:${CODEBUILD_SOURCE_VERSION}
      - docker tag docker-compose-ecs-sample_frontend:latest ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_frontend:${CODEBUILD_SOURCE_VERSION}
      - docker push ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_backend:${CODEBUILD_SOURCE_VERSION}
      - docker push ${DOCKERHUB_USERNAME}/docker-compose-ecs-sample_frontend:${CODEBUILD_SOURCE_VERSION}
  
  post_build:
    commands:
      - echo "build successful"