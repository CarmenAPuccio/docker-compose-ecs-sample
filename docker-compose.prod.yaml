x-aws-vpc: "vpc-FILL_ME"
x-aws-logs_retention: 30
x-aws-cloudformation:
  Resources:
    LoadBalancer:
      Properties:
        #Scheme: internal
        Subnets:
        - subnet-FILL_ME
        - subnet-FILL_ME
        # Certificates: 
        #   - CertificateArn: "arn:aws:acm:certificate/123abc"
        # Protocol: HTTPS
    FrontendService:
      Properties:
        NetworkConfiguration:
          AwsvpcConfiguration:
            Subnets:
            - subnet-FILL_ME
            - subnet-FILL_ME
            
services:
  proxy:
    image: public.ecr.aws/anshrma/nginx-proxy:latest
  backend:
    image: public.ecr.aws/anshrma/flask-backend:latest
    logging:
      options:
        mode: non-blocking # Default is blocking
        max-buffer-size: 5m # Default is 1min
    # This enables task level IAM role for the service
    x-aws-role:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: sqs:*
          Resource: FILL_ME_ARN_OF_SQS
  db:
    image: mysql:8.0.19
    x-aws-pull_credentials: FILL_ME_ARN_OF_SECRET_FROM_SECRET_MANAGER_TO_CONNECT_TO_DOCKERHUB

secrets:
  db-password:
    name: FILL_ME_ARN_OF_SECRET_FROM_SECRET_MANAGER_TO_CONNECT_TO_RDS
    external: true
  
  
#Above overrides mysecrets
# $ cat creds.json
# {
#   "username":"Some secret name",
#   "password":"some secret credential"
# }

# Now create it using following 
# $ docker secret create pullcred /path/to/creds.json --context GIVE_ECS_CONTEXT_NAME
# arn:aws:secretsmanager:eu-west-3:xxx:secret:pullcred